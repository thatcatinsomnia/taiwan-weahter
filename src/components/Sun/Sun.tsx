/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/sun.glb -t -p6 -k -r
*/

import * as THREE from 'three';
import { useGLTF } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: { Sun001: THREE.Mesh;
    SunLight: THREE.Mesh;
  };
  materials: {
    yellow: THREE.MeshStandardMaterial;
    orange: THREE.MeshStandardMaterial;
  };
};

type Props = JSX.IntrinsicElements['group'] & {
  x?: number;
  y?: number;
  z?: number;
  rz?: number;
  intensity?: number;
  color?: string;
};

export default function Sun({
  scale = 0.03,
  x = 0,
  y = 0,
  z = 0,
  rz = 0,
  color = '#FDFDFD',
  intensity = 0,
  ...props
}: Props) {
  const { nodes, materials } = useGLTF('/sun.glb') as unknown as GLTFResult;
  
  return (
    <group
      {...props}
      dispose={null}
      scale={scale}
      position-x={x}
      position-y={y}
      position-z={z}
      rotation-x={Math.PI / 2}
      rotation-y={-0.2}
      rotation-z={rz}
    >
      <directionalLight
        position-x={x}
        position-y={y}
        position-z={z}
        target-position={[x, y, 0]}
        color={color}
        intensity={intensity}
      />

      <mesh
        name="Sun001"
        geometry={nodes.Sun001.geometry}
        material={materials.yellow}
      >
        <mesh
          name="SunLight"
          geometry={nodes.SunLight.geometry}
          material={materials.orange}
          position={[0, 0, -0.5]}
        />
      </mesh>
    </group>
  );
}

useGLTF.preload('/sun.glb');
